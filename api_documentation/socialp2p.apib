FORMAT: 1A
HOST: http://socialp2p.herokuapp.com/api

# socialp2p API

# Data Structures

## NoteData
+ id: 1 (required, number) - Unique identifier
+ title: Grocery list (required) - Single line description
+ body: Buy milk - Full description of the note which supports Markdown.

## NoteList (array)
+ (NoteData)

# Group Posts
Endpoints for post retrieval

## Posts List [/posts]
Public posts in the server

### Get Posts [GET]
Get a list of posts marked as public on the server.

+ Response 200 (application/json)
    
    + Body

            [
                {
                    "id": "7f0996d2-def2-424e-94f7-9b1c323d39cb",
                    "author": {
                        "id": "a727114f-6873-4e10-85a0-5ced9d88b1b7",
                        "host": "http://socialp2p.herokuapp.com/",
                        "displayname": "ivan",
                        "url": "http://socialp2p.herokuapp.com/api/author/a727114f-6873-4e10-85a0-5ced9d88b1b7"
                    },
                    "published": "2016-03-11T06:24:51.481828Z",
                    "content_type": "text/plain",
                    "title": "First!",
                    "content": "My first post, woohoo!"
                },
                {
                    "id": "94136a58-cb72-41c0-93e6-30c6ec578052",
                    "author": {
                        "id": "a169ea75-0746-47fe-b52f-e424c94da2cc",
                        "host": "http://socialp2p.herokuapp.com/",
                        "displayname": "john",
                        "url": "http://socialp2p.herokuapp.com/api/author/a169ea75-0746-47fe-b52f-e424c94da2cc"
                    },
                    "published": "2016-03-11T06:24:10.117472Z",
                    "content_type": "text/plain",
                    "title": "Newbie",
                    "content": "I'm new here!"
                }
            ]

### Create New Post [POST]
Create a new note using a title and an optional content body.

+ Request with body (application/json)

    + Body

            {
                "title": "My new note",
                "content": "This is the body"
            }

+ Response 201

+ Response 400 (application/json)

    + Body

            {
                "error": "Invalid title"
            }

+ Request without body (application/json)

    + Body

            {
                "title": "My new note"
            }

+ Response 201

+ Response 400 (application/json)

    + Body

            {
                "error": "Invalid title"
            }

## Specific post [/posts/{id}]
Get a specific post

+ Parameters

    + id: `7f0996d2-def2-424e-94f7-9b1c323d39cb` (required, string) - The note ID

### Get Note [GET]
Get a single post.

+ Response 200 (application/json)

    + Body

            {
                "id": "7f0996d2-def2-424e-94f7-9b1c323d39cb",
                "author": {
                    "id": "a727114f-6873-4e10-85a0-5ced9d88b1b7",
                    "host": "http://socialp2p.herokuapp.com/",
                    "displayname": "ivan",
                    "url": "http://socialp2p.herokuapp.com/api/author/a727114f-6873-4e10-85a0-5ced9d88b1b7"
                },
                "published": "2016-03-11T06:24:51.481828Z",
                "content_type": "text/plain",
                "title": "First!",
                "content": "My first post, woohoo!"
            }


## Note [/notes/{id}{?body}]
Note description

+ Parameters

    + id: `68a5sdf67` (required, string) - The note ID

### Get Note [GET]
Get a single note.

+ Parameters

    + body: `false` (boolean) - Set to `false` to exclude note body content.

+ Response 200 (application/json)

    + Headers

            X-Request-ID: f72fc914
            X-Response-Time: 4ms

    + Attributes (NoteData)

+ Response 404 (application/json)

    + Headers

            X-Request-ID: f72fc914
            X-Response-Time: 4ms

    + Body

            {
                "error": "Note not found"
            }

### Update a Note [PUT]
Update a single note by setting the title and/or body.

::: warning
#### <i class="fa fa-warning"></i> Caution
If the value for `title` or `body` is `null` or `undefined`, then the corresponding value is not modified on the server. However, if you send an empty string instead then it will **permanently overwrite** the original value.
:::

+ Request (application/json)

    + Body

            {
                "title": "Grocery List (Safeway)"
            }

+ Response 200 (application/json)

    + Headers

            X-Request-ID: f72fc914
            X-Response-Time: 4ms

    + Attributes (NoteData)

+ Response 404 (application/json)

    + Headers

            X-Request-ID: f72fc914
            X-Response-Time: 4ms

    + Body

            {
                "error": "Note not found"
            }

+ Request delete body (application/json)

    + Body

            {
                "body": ""
            }

+ Response 200 (application/json)

    + Headers

            X-Request-ID: f72fc914
            X-Response-Time: 4ms

    + Attributes (NoteData)

+ Response 404 (application/json)

    + Headers

            X-Request-ID: f72fc914
            X-Response-Time: 4ms

    + Body

            {
                "error": "Note not found"
            }

### Delete a Note [DELETE]
Delete a single note

+ Response 204

+ Response 404 (application/json)

    + Headers

            X-Request-ID: f72fc914
            X-Response-Time: 4ms

    + Body

            {
                "error": "Note not found"
            }

# Group Authors
Group description

## Authors List [/author]
A list of authors

<!-- + Parameters

    + name: `alice` (string, optional) - Search for a user by name
    + joinedBefore: `2011-01-01` (string, optional) - Search by join date
    + joinedAfter: `2011-01-01` (string, optional, ) - Search by join date
    + sort: `joined` (string, optional) - Which field to sort by
        + Default: `name`
        + Members
            + `name`
            + `joined`
            + `-joined`
            + `age`
            + `-age`
            + `location`
            + `-location`
            + `plan`
            + `-plan`
    + limit: `25` (integer, optional) - The maximum number of users to return, up to `50`
      + Default: `10` -->

### Get authors [GET]

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "44f22aa8-20f2-483d-92a1-8ff3d176fe8e",
                    "host": "http://socialp2p.herokuapp.com/",
                    "displayname": "john",
                    "url": "http://socialp2p.herokuapp.com/api/author/44f22aa8-20f2-483d-92a1-8ff3d176fe8e",
                    "friends": []
                },
                {
                    "id": "d9373b52-4c25-40dd-a70e-6ca4e8162fe8",
                    "host": "http://socialp2p.herokuapp.com/",
                    "displayname": "admin",
                    "url": "http://socialp2p.herokuapp.com/api/author/d9373b52-4c25-40dd-a70e-6ca4e8162fe8",
                    "friends": []
                }
            ]


## Get one author [/author/{id}]
A specific author

+ Parameters
    + id: `8d31ad52-640b-47d5-b109-43a432dc3c53` - Unique author identifier

### GET

+ Response 200 (application/json)
    
    + Body

            {
                "id": "8d31ad52-640b-47d5-b109-43a432dc3c53",
                "host": "http://socialp2p.herokuapp.com/",
                "displayname": "ivan",
                "url": "http://socialp2p.herokuapp.com/api/author/8d31ad52-640b-47d5-b109-43a432dc3c53",
                "friends": []
            }



# Group Friends
Get or set tags on notes

## GET /friends
Get a list of bars

+ Response 200 (application/json)

        ["tag1", "tag2", "tag3"]

## Get [/friends/{id}]
Get a single tag

+ Parameters
    + id - Unique tag identifier

### GET

+ Response 200